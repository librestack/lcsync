NEXT ACTIONS:

* MLD trigger - > index lookup & send (check subscription each loop)
* net_job_send_tree() - handle multiple interfaces (send all or mld requested)
* file indexing -> lmdb
* fix 0035 bug
* run tests in separate namespace

----------------------------------------------------------------------
* net_sync_trees() - get channel # to use from sender
* SSE*/AVX/AVX2 dispatcher, function pointers etc.
* bredth-first search.
* # channels should be set by sender - receiver gets channel info with tree
* reduce verbosity of sender/receiver modes
* sharding
* indexing
* improve / extend librecast API with supporting functions
* MLD triggering - don't send when noone listening (add MLD functions to librecast API)
* directory syncing
* net_dump() (implement --hex for network files)
* build without bsd/md5.h on Ubuntu
* send file permissions - set in net_sync()
* man page - output from help
* resizing of merkle tree for changing data
* handle -- in options
* handle - to input from stdin
* FEC
* flow control
* (Linux) eBPF
* channel interleaving
* verify tree when received, update map and continue receiving if tree invalid
* remove unneeded DEBUG
* ratelimit kbps
* work out network saturation %
* stats - calculate transfer speed bps etc.
* net_send_subtree() / net_send_data() - return bytes or -1
* detect hotplug interfaces
* gettext - international msgs
* peer to peer - reshare files - de-duping of multiple sends
* atomic replication via temporary file and mv - COW?
* encryption, obviously
* chroot
* container API (cgroups, namespaces)
* document all our headers etc in RFC format with header structures mapped out in ASCII

